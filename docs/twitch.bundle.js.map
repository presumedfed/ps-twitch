{"version":3,"sources":["webpack:///webpack/bootstrap b0c598bca6713cf42545","webpack:///./src/assets/js/index.js","webpack:///./src/assets/js/utilities.js","webpack:///./src/assets/js/twitch.js"],"names":["Utilities","twitch","search","document","getElementById","focus","querySelector","addEventListener","event","val","value","getTwitchStream","q","then","stream","renderStream","links","querySelectorAll","i","length","preventDefault","url","href","split","options","parseQuery","endpoint","fetchJSONP","script","timeout","callbackId","Date","getTime","clean","callback","window","parentNode","removeChild","clearTimeout","Promise","resolve","reject","setTimeout","createElement","src","body","appendChild","data","query","params","arr","decodeURIComponent","Twitch","client_id","limit","offset","Object","keys","map","key","encodeURIComponent","join","replace","response","catch","error","console","log","total","_total","prev","_links","next","self","page","pageCount","Math","ceil","html","innerHTML","getElementsByClassName","prevEl","getElementsByTagName","style","display","showNext","nextEl","streams","hasOwnProperty","strm","channel","preview","medium","display_name","game","followers","status","classList","add"],"mappings":"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","file":"twitch.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b0c598bca6713cf42545","import * as Utilities from './utilities';\nimport Twitch from './twitch';\n\nconst twitch = new Twitch();\nconst search = document.getElementById('search');\n\nsearch.focus();\n\n// listener for the search button. When clicked, get the value of search input\n// then retrieve the streams from the twitch endpoint and render\ndocument.querySelector('button').addEventListener('click', function(event) {\n  const val = search.value;\n\n  if (val !== '') {\n    twitch.getTwitchStream({q: search.value}).then((stream) => {\n      twitch.renderStream(stream);\n    });\n  }\n});\n\n// add listeners for the prev/next icons for pagination\nconst links = document.querySelectorAll('.pagination a')\nfor (let i=0; i < links.length; i++) {\n  links[i].addEventListener('click', function(event) {\n    event.preventDefault();\n\n    const url = this.href.split('?');\n    let options = {};\n\n    options = Utilities.parseQuery(url[1]);\n    options.endpoint = url[0];\n\n    twitch.getTwitchStream(options).then((stream) => {\n      twitch.renderStream(stream);\n    });\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/js/index.js","/* Fetches jsponp from a url (with query params). It will clean up after itself, removing the \n * script it creates to retrieve the jsonp and the callback it creates to process the jsonp. \n * It returns a promise.\n *\n * @param {string} url - url to make the request\n *\n */\nexport let fetchJSONP = (url) => {\n  let script;\n  let timeout;\n\n  // iniially callbackId was not unique but there were issues when clicking the next/prev icon too quickly. \n  // The callback would already be deleted by the 'clean' method when subsequent fetches returned\n  // so I needed to make the callbacks unique\n  const callbackId = 'JSONP_CALLBACK_' + new Date().getTime();\n\n  // remove jsonp script tag and callback and clear the timeout\n  let clean = function(callback, script, timeout) {\n    delete window[callback];\n\n    if (script && script.parentNode) {\n      script.parentNode.removeChild(script);\n    }\n\n    if (timeout) clearTimeout(timeout);\n  }\n\n  return new Promise((resolve, reject) => {\n      timeout = setTimeout(function() {\n          clean(callbackId, script, timeout);\n          reject('api timeout');\n      }, 10000);\n\n      url += '&callback=' + callbackId;\n      script = document.createElement('script');\n      script.src = url;\n\n      document.body.appendChild(script);\n\n      window[callbackId] = function(data) {\n        resolve(data);\n        clearTimeout(timeout);\n        clean(callbackId, script, timeout);\n      };  \n  });\n}\n\n/* Helper to create json object from query string\n *\n * @param {string} query - GET query string\n * \n */\nexport let parseQuery = (query) => {\n  const params = {};\n  const arr = query.split('&');\n\n  for (let i = 0; i < arr.length; i++) {\n      const val = arr[i].split('=');\n      params[decodeURIComponent(val[0])] = decodeURIComponent(val[1] || '');\n  }\n\n  return params;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/js/utilities.js","import * as Utilities from './utilities';\n\nexport default class Twitch {\n\n  /* Creates the url to fetch jsponp from twitch and the make call to reteieve the jsonp. Returns a promise\n   *\n   * @param {Object} options - options for the query to the twitch endpoint\n   * \n   * ex.  options = {\n   *        endpoint: 'https://api.twitch.tv/kraken/search/streams'   // endpoint\n   *        limit: 10,  // number of streams to get\n   *        offset: 20  // number of streams to skip\n   *        q: 'starcraft' // search term\n   *      }\n   *\n   */\n  getTwitchStream(options) {\n    options = options || {}\n\n    const endpoint = options.endpoint || 'https://api.twitch.tv/kraken/search/streams';\n\n    const params = { \n      client_id: 'rsxp3j0h78htzh9ieti5h37s01ajkd',\n      limit: options.limit || 10,\n      offset: options.offset || 0,\n      q: options.q || ''\n    };\n\n    // create query string from object\n    var query = Object.keys(params)\n      .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]))\n      .join(\"&\")\n      .replace(/%20/g, \"+\");\n\n    return new Promise((resolve, reject) => {\n      // if q doesn't have a value, no need to fetch\n      // TODO:  if the q is the same and the previous term, don't search\n      if (params.q) {\n          const url = endpoint + '?' + query;\n\n          new Utilities.fetchJSONP(url)\n            .then((response) => {\n              resolve(response);\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n      } else {\n        // reject if the value to search is missing\n        reject('getTwitchStream::missing q');\n      }\n    });\n  }\n\n  /* Renders the markup for the streams\n   *  - update total display\n   *  - update page count\n   *  - set the href for prev/next icons based on links returned by twitch api\n   *  - generate markup for streams to display\n   *\n   * @param {Object} stream - json returned from the twitch endpoint\n   * \n   */\n  renderStream(stream) {\n    const total = stream._total;\n    const prev = stream._links.prev || '';\n    const next = stream._links.next || '';\n\n    // params for the link to the current page\n    const params = new Utilities.parseQuery(stream._links.self.split('?')[1]);\n    const page = (params.offset || 0)/params.limit + 1;\n    const pageCount = Math.ceil(total/params.limit);\n    const q = params.q || '';\n\n    let html = '';\n\n    document.getElementById('count').innerHTML = total;\n    document.getElementsByClassName('pagination-count')[0].innerHTML = page + '/' + pageCount;\n\n    // TODO: update to support multiple pagination components on the page\n    const prevEl = document.getElementsByClassName('pagination-prev')[0];\n    if (prev) {\n      // update the href and show the icon. the eventlistener will use the href to get previous page \n      prevEl.getElementsByTagName('a')[0].href = prev;\n      prevEl.style.display = 'inline-block';\n    } else {\n      // hide when it's not needed\n      prevEl.style.display = 'none';\n    }\n\n    // if we are on last page, hide 'next' icon. api returns next link for all pages (even last), so we need to track it.\n    const showNext = (page < pageCount);\n    const nextEl = document.getElementsByClassName('pagination-next')[0];\n    if (next && showNext) {\n      // update the href and show the icon. the eventlistener will use the href to get next page \n      nextEl.getElementsByTagName('a')[0].href = next;\n      nextEl.style.display = 'inline-block';\n    } else {\n      // hide when it's not needed\n      nextEl.style.display = 'none';\n    }\n\n    // generate markup for each stream\n    for (let key in stream.streams) {\n        if (stream.streams.hasOwnProperty(key)) {\n          const strm = stream.streams[key];\n          const channel = strm.channel;\n\n          html += '<div class=\"stream\">';\n          html += '<figure class=\"stream-screen\"><img src=\"' + strm.preview.medium + ' alt=\"\" /></figure>'\n          html += '<div class=\"stream-info\">';\n          html += '<h3>' + channel.display_name + '</h3>';\n          html += '<p class=\"\">' + channel.game + ' - ' + channel.followers + ' viewers</p>';\n          html += '<p class=\"description\">' + channel.status + '</p>';\n          html += '</div>';\n          html += '</div>';\n        }\n    }\n\n    // add the markup to the dom and add class to start the transition\n    document.getElementById('streams-content').innerHTML = html;\n    document.getElementById('streams').classList.add('show');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/js/twitch.js"],"sourceRoot":""}